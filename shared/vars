#!/usr/bin/env bash

get_service_file(){
  ENVIRONMENT=$1
  case "$ENVIRONMENT" in
    demo) echo "${!SERVICE_ACCOUNT_FILE_DEMO}"
       ;;
    test) echo "${!SERVICE_ACCOUNT_FILE_TEST}"
       ;;
    development) echo "${!SERVICE_ACCOUNT_FILE_DEV}"
      ;;
  esac
}

#function set_def(){
#  val=$1
#  varname=SERVICE_ACCOUNT_FILE_$1
#  default=
#  overwrite=${!varname}
#  if [[ -z ${!val} ]]; then
#    val=$overwrite
#  else
#    val=${!val}
#  fi
#  echo "$val"
#}

# In case SERVICE_ACCOUNT_FILE_$ENVIRONMENT is set, use that value. otherwise fall back to SERVICE_ACCOUNT_FILE
SERVICE_ACCOUNT_FILE_ENV=$(get_service_file "$ENVIRONMENT")
echo SERVICE_ACCOUNT_FILE_ENV="$SERVICE_ACCOUNT_FILE_ENV"

if [ -n "$SERVICE_ACCOUNT_FILE_ENV" ]; then
  SERVICE_ACCOUNT_FILE=$SERVICE_ACCOUNT_FILE_ENV
fi
export SERVICE_ACCOUNT_FILE
echo SERVICE_ACCOUNT_FILE="$SERVICE_ACCOUNT_FILE"


## DRLS - GCP
BUCKET_NAME=${BUCKET_NAME:-${PROJECT_ID}-cql-${KUBE_NAMESPACE}}
export BUCKET_NAME
BUCKET="gs://$BUCKET_NAME"
export BUCKET
DB_NAME="CDS-Library.zip"
export DB_NAME

export OAUTH_TOKEN="http://$AUTH/auth/realms/ClientFhirServer/protocol/openid-connect/token"
export OAUTH_AUTHORIZE="http://$AUTH/auth/realms/ClientFhirServer/protocol/openid-connect/auth"
export CDS_SERVICE="${CRD}/r4/cds-services"
export FHIR_SERVER="${TEST_EHR}/test-ehr/r4"
export CRD_REQUEST_GENERATOR="${CRD_REQUEST_GENERATOR_HOST}:3000"
export PUBLIC_KEYS="${CRD_REQUEST_GENERATOR_HOST}:3001/public_keys"


